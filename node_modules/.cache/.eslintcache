[{"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/index.js":"1","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/reportWebVitals.js":"2","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/App.js":"3","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Header.js":"4","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Footer.js":"5","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Main.js":"6","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/PopupWithForm.js":"7","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/ImagePopup.js":"8","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Card.js":"9","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/utils/api.js":"10"},{"size":546,"mtime":1652041360812,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1651082520875,"results":"13","hashOfConfig":"12"},{"size":3981,"mtime":1652196511630,"results":"14","hashOfConfig":"12"},{"size":212,"mtime":1651527807097,"results":"15","hashOfConfig":"12"},{"size":170,"mtime":1651492363082,"results":"16","hashOfConfig":"12"},{"size":1553,"mtime":1652196643294,"results":"17","hashOfConfig":"12"},{"size":710,"mtime":1652197045144,"results":"18","hashOfConfig":"12"},{"size":621,"mtime":1652196997312,"results":"19","hashOfConfig":"12"},{"size":648,"mtime":1652197045144,"results":"20","hashOfConfig":"12"},{"size":2138,"mtime":1651862559267,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3an0se",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/index.js",[],[],"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/reportWebVitals.js",[],[],"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/App.js",["55"],[],"import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n\n      <PopupWithForm\n        isOpen={isEditProfilePopupOpen}\n        title=\"Редактировать профиль\"\n        name=\"edit\"\n        onClose={closeAllPopups}\n      >\n        <div>\n          <div className=\"popup__field\">\n            <input\n              required\n              minLength={2}\n              maxLength={40}\n              type=\"text\"\n              className=\"popup__input popup__input_type_name\"\n              name=\"nameInput\"\n              id=\"name\"\n            />\n            <span id=\"name-error\" className=\"popup__error\" />\n          </div>\n          <div className=\"popup__field\">\n            <input\n              required\n              minLength={2}\n              maxLength={200}\n              type=\"text\"\n              className=\"popup__input popup__input_type_profession\"\n              name=\"jobInput\"\n              id=\"job\"\n            />\n            <span id=\"job-error\" className=\"popup__error\" />\n          </div>\n        </div>\n      </PopupWithForm>\n      <PopupWithForm\n        isOpen={isAddPlacePopupOpen}\n        title=\"Новое место\"\n        name=\"new-card\"\n        onClose={closeAllPopups}\n      >\n        <div>\n          <div className=\"popup__field\">\n            <input\n              required\n              minLength={2}\n              maxLength={30}\n              type=\"text\"\n              className=\"popup__input popup__input_type_place\"\n              name=\"placeInput\"\n              placeholder=\"Название\"\n              id=\"new-place\"\n            />\n            <span id=\"new-place-error\" className=\"popup__error\" />\n          </div>\n          <div className=\"popup__field\">\n            <input\n              required\n              type=\"url\"\n              className=\"popup__input popup__input_type_link\"\n              name=\"linkInput\"\n              placeholder=\"Ссылка на картинку\"\n              id=\"link\"\n            />\n            <span id=\"link-error\" className=\"popup__error\" />\n          </div>\n        </div>\n      </PopupWithForm>\n\n      <PopupWithForm\n        isOpen={isEditAvatarPopupOpen}\n        title=\"Обновить аватар\"\n        name=\"user\"\n        onClose={closeAllPopups}\n      >\n        <div>\n          div class=\"popup__field\"&gt;\n          <input\n            required\n            type=\"url\"\n            className=\"popup__input popup__input_type_link\"\n            name=\"avatarInput\"\n            placeholder=\"Ссылка на аватар\"\n            id=\"avatar\"\n          />\n          <span id=\"avatar-error\" className=\"popup__error\" />\n        </div>\n      </PopupWithForm>\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Header.js",[],[],"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Footer.js",[],[],"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Main.js",["56"],[],"import api from \"../utils/api\";\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\n\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick }) {\n  let [userName, setUserName] = useState();\n  let [userDescription, setUserDescription] = useState();\n  let [userAvatar, setUserAvatar] = useState();\n  let [cards, setCards] = React.useState([]);\n\n  api.getUser().then((res) => {\n    setUserName(res.name);\n    setUserDescription(res.about);\n    setUserAvatar(res.avatar);\n  });\n\n  api.gerCards().then((cards) => {\n    setCards(cards);\n  });\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar-container\">\n          <img\n            className=\"profile__avatar\"\n            onClick={onEditAvatar}\n            src={userAvatar}\n          />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{userName}</h1>\n          <p className=\"profile__description\">{userDescription}</p>\n          <button\n            type=\"button\"\n            className=\"profile__edit-button\"\n            onClick={onEditProfile}\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"profile__add-button\"\n          onClick={onAddPlace}\n        />\n      </section>\n      <section className=\"places\">\n        <ul className=\"places__grid\">\n          {cards.map((card) => (\n            <Card card={card} onCardClick={onCardClick} />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/PopupWithForm.js",[],[],"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/ImagePopup.js",[],[],"/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/components/Card.js",["57"],[],"function Card({ card, onCardClick }) {\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  return (\n    <li className=\"place\">\n      <img\n        className=\"place__foto\"\n        style={{ backgroundImage: `url(${card.link})` }}\n        onClick={handleClick}\n      />\n      <button type=\"button\" className=\"place__delete\" />\n      <div className=\"place__rectangle\">\n        <h2 className=\"place__title\">{card.name}</h2>\n        <div className=\"place__like-place\">\n          <button type=\"button\" className=\"place__like\" />\n          <span className=\"place__like-count\">0</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","/Users/a-chechetkin/Documents/yandex_paktikum/mesto-react/src/utils/api.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":25,"column":11,"nodeType":"64","endLine":29,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":8,"column":7,"nodeType":"64","endLine":12,"endColumn":9},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]